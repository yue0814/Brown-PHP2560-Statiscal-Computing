select(genres3) %>%
group_by(genres3) %>%
summarise(Freq = n()))
x4 <- as.matrix(movie_gen %>%
select(genres4) %>%
group_by(genres4) %>%
summarise(Freq = n()))
x5 <- as.matrix(movie_gen %>%
select(genres5) %>%
group_by(genres5) %>%
summarise(Freq = n()))
x2$Freq
x2[,2]
x2[,2] <- as.numeric(x2[,2])
x1[,2] <- as.numeric(x1[,2])
x3[,2] <- as.numeric(x3[,2])
x4[,2] <- as.numeric(x4[,2])
x5[,2] <- as.numeric(x5[,2])
x1
class(x1[,2])
as.numeric(x1[,2])
x1[,2] <- as.numeric(x1[,2])
x1
x1 <- cbind(x1[,1], as.numeric(x1[,2])
)
x1
as.numeric(x1)
names_gen <-cbind(x1[,1], x2[,1], x3[,1], x4[,1], x5[,1])
View(names_gen)
names_gen <-c(x1[,1], x2[,1], x3[,1], x4[,1], x5[,1])
x1 <- as.matrix(movie_gen %>%
select(genres1) %>%
group_by(genres1) %>%
summarise(Freq = n()))
x2 <-as.matrix(movie_gen %>%
select(genres2) %>%
group_by(genres2) %>%
summarise(Freq = n()))
x3 <- as.matrix(movie_gen %>%
select(genres3) %>%
group_by(genres3) %>%
summarise(Freq = n()))
x4 <- as.matrix(movie_gen %>%
select(genres4) %>%
group_by(genres4) %>%
summarise(Freq = n()))
x5 <- as.matrix(movie_gen %>%
select(genres5) %>%
group_by(genres5) %>%
summarise(Freq = n()))
names_gen <-c(x1[,1], x2[,1], x3[,1], x4[,1], x5[,1])
names_gen
unique(names_gen)
gen_ana <- unique(names_gen)
class(movie_gen)
x1 <- movie_gen %>%
select(genres1) %>%
group_by(genres1) %>%
summarise(Freq = n())
x2 <-movie_gen %>%
select(genres2) %>%
group_by(genres2) %>%
summarise(Freq = n())
x3 <- movie_gen %>%
select(genres3) %>%
group_by(genres3) %>%
summarise(Freq = n())
x4 <- movie_gen %>%
select(genres4) %>%
group_by(genres4) %>%
summarise(Freq = n())
x5 <- movie_gen %>%
select(genres5) %>%
group_by(genres5) %>%
summarise(Freq = n())
View(x1)
x1
class(x1$Freq)
names_gen <-c(x1[,1], x2[,1], x3[,1], x4[,1], x5[,1])
gen_ana <- unique(names_gen)
names_gen
gen_ana
gen_ana <- unique(unlist(names_gen))
gen_ana[1] %in% x1[,1]
View(x1)
x1[,1]
"Action" %in% x1[,1]
"Action" in x1[,1]
"Action" == x1[1,1]
as.vector(x1[,1])
gen_ana[1] %in% as.vector(x1[,1])
gen_ana[1] %in% as.matrix(x1[,1],nrow=1)
gen_ana[1] %in% as.matrix(x1[,1],nrow=1)
as.matrix(x1[,1],nrow=1)
which(as.matrix(x1[,1])==gen_ana[1])
x1[which(as.matrix(x1[,1])==gen_ana[1]),2]
count <- rep(0, length(gen_ana))
x1[which(as.matrix(x1[,1])==gen_ana[1]),2] + 1
count <- rep(0, length(gen_ana))
for (i in length(gen_ana)){
if ( gen_ana[i] %in% as.matrix(x1[,1])){
count[i] <- count[i] + x1[which(as.matrix(x1[,1])==gen_ana[i]), 2]
}
if ( gen_ana[i] %in% as.matrix(x2[,1])){
count[i] <- count[i] + x2[which(as.matrix(x1[,1])==gen_ana[i]), 2]
}
if ( gen_ana[i] %in% as.matrix(x1[,1])){
count[i] <- count[i] + x3[which(as.matrix(x1[,1])==gen_ana[i]), 2]
}
if ( gen_ana[i] %in% as.matrix(x1[,1])){
count[i] <- count[i] + x4[which(as.matrix(x1[,1])==gen_ana[i]), 2]
}
if ( gen_ana[i] %in% as.matrix(x1[,1])){
count[i] <- count[i] + x5[which(as.matrix(x1[,1])==gen_ana[i]), 2]
}
}
count
count <- rep(0, length(gen_ana))
for (i in 1:length(gen_ana)){
if ( gen_ana[i] %in% as.matrix(x1[,1])){
count[i] <- count[i] + x1[which(as.matrix(x1[,1])==gen_ana[i]), 2]
}
if ( gen_ana[i] %in% as.matrix(x2[,1])){
count[i] <- count[i] + x2[which(as.matrix(x1[,1])==gen_ana[i]), 2]
}
if ( gen_ana[i] %in% as.matrix(x1[,1])){
count[i] <- count[i] + x3[which(as.matrix(x1[,1])==gen_ana[i]), 2]
}
if ( gen_ana[i] %in% as.matrix(x1[,1])){
count[i] <- count[i] + x4[which(as.matrix(x1[,1])==gen_ana[i]), 2]
}
if ( gen_ana[i] %in% as.matrix(x1[,1])){
count[i] <- count[i] + x5[which(as.matrix(x1[,1])==gen_ana[i]), 2]
}
}
count
count <- rep(0, length(gen_ana))
for (i in 1:length(gen_ana)){
if ( gen_ana[i] %in% as.matrix(x1[,1])){
count[i] <- count[i] + x1[which(as.matrix(x1[,1])==gen_ana[i]), 2]
}
if ( gen_ana[i] %in% as.matrix(x2[,1])){
count[i] <- count[i] + x2[which(as.matrix(x1[,1])==gen_ana[i]), 2]
}
if ( gen_ana[i] %in% as.matrix(x3[,1])){
count[i] <- count[i] + x3[which(as.matrix(x1[,1])==gen_ana[i]), 2]
}
if ( gen_ana[i] %in% as.matrix(x4[,1])){
count[i] <- count[i] + x4[which(as.matrix(x1[,1])==gen_ana[i]), 2]
}
if ( gen_ana[i] %in% as.matrix(x5[,1])){
count[i] <- count[i] + x5[which(as.matrix(x1[,1])==gen_ana[i]), 2]
}
}
count
gen_count <- rep(0, length(gen_ana))
gen_ana
subset(gen_ana, select=-NA)
gen_ana[-27]
gen_ana <- gen_ana[-27]
gen_count <- rep(0, length(gen_ana))
gen_ana[1]%in% as.matrix(x2[,1])
gen_ana[1]%in% as.matrix(x3[,1])
gen_ana[1]%in% as.matrix(x4[,1])
gen_ana[1]%in% as.matrix(x5[,1])
gen_ana[1]%in% as.matrix(x1[,1])
View(x2)
View(x3)
View(x5)
gen_count[1] + x1[which(as.matrix(x1[,1])==gen_ana[1]), 2]
gen_count[1] + as.numeric(x1[which(as.matrix(x1[,1])==gen_ana[1]), 2])
gen_count <- rep(0, length(gen_ana))
for (i in 1:length(gen_ana)){
if ( gen_ana[i] %in% as.matrix(x1[,1])){
gen_count[i] <- gen_count[i] + as.numeric(x1[which(as.matrix(x1[,1])==gen_ana[i]), 2])
}
if ( gen_ana[i] %in% as.matrix(x2[,1])){
gen_count[i] <- gen_count[i] + as.numeric(x2[which(as.matrix(x1[,1])==gen_ana[i]), 2])
}
if ( gen_ana[i] %in% as.matrix(x3[,1])){
gen_count[i] <- gen_count[i] + as.numeric(x3[which(as.matrix(x1[,1])==gen_ana[i]), 2])
}
if ( gen_ana[i] %in% as.matrix(x4[,1])){
gen_count[i] <- gen_count[i] + as.numeric(x4[which(as.matrix(x1[,1])==gen_ana[i]), 2])
}
if ( gen_ana[i] %in% as.matrix(x5[,1])){
gen_count[i] <- gen_count[i] + as.numeric(x5[which(as.matrix(x1[,1])==gen_ana[i]), 2])
}
}
gen_count
sum(gen_count,na.rm = T)
gen_ana[19]
gen_ana[19] %in% as.matrix(x1[,1])
View(x1)
gen_ana[19] %in% as.matrix(x2[,1])
gen_ana[19] %in% as.matrix(x3[,1])
gen_ana[19] %in% as.matrix(x4[,1])
gen_ana[19] %in% as.matrix(x5[,1])
View(x5)
View(x4)
length(gen_ana)
gen_count <- rep(0, length(gen_ana))
gen_count[19] <- gen_count[19] + as.numeric(x1[which(as.matrix(x1[,1])==gen_ana[19]), 2])
gen_count
gen_count[19] <- gen_count[19] + as.numeric(x1[which(as.matrix(x2[,1])==gen_ana[19]), 2])
gen_count[19] <- gen_count[19] + as.numeric(x1[which(as.matrix(x3[,1])==gen_ana[19]), 2])
gen_count[19] <- gen_count[19] + as.numeric(x1[which(as.matrix(x4[,1])==gen_ana[19]), 2])
gen_count[19] <- gen_count[19] + as.numeric(x1[which(as.matrix(x5[,1])==gen_ana[19]), 2])
gen_count
gen_count <- rep(0, length(gen_ana))
for (i in 1:length(gen_ana)){
if ( gen_ana[i] %in% as.matrix(x1[,1])){
gen_count[i] <- gen_count[i] + as.numeric(x1[which(as.matrix(x1[,1])==gen_ana[i]), 2])
}
if ( gen_ana[i] %in% as.matrix(x2[,1])){
gen_count[i] <- gen_count[i] + as.numeric(x2[which(as.matrix(x1[,1])==gen_ana[i]), 2])
}
if ( gen_ana[i] %in% as.matrix(x3[,1])){
gen_count[i] <- gen_count[i] + as.numeric(x3[which(as.matrix(x1[,1])==gen_ana[i]), 2])
}
if ( gen_ana[i] %in% as.matrix(x4[,1])){
gen_count[i] <- gen_count[i] + as.numeric(x4[which(as.matrix(x1[,1])==gen_ana[i]), 2])
}
if ( gen_ana[i] %in% as.matrix(x5[,1])){
gen_count[i] <- gen_count[i] + as.numeric(x5[which(as.matrix(x1[,1])==gen_ana[i]), 2])
}
}
gen_count
gen_ana[12]
View(x1)
View(x2)
View(x3)
View(x4)
View(x5)
View(x4)
View(x3)
View(x2)
View(x1)
gen_count <- rep(0, length(gen_ana))
for (i in 1:length(gen_ana)){
if ( gen_ana[i] %in% as.matrix(x1[,1])){
gen_count[i] <- gen_count[i] + as.numeric(x1[which(as.matrix(x1[,1])==gen_ana[i]), 2])
}
if ( gen_ana[i] %in% as.matrix(x2[,1])){
gen_count[i] <- gen_count[i] + as.numeric(x2[which(as.matrix(x2[,1])==gen_ana[i]), 2])
}
if ( gen_ana[i] %in% as.matrix(x3[,1])){
gen_count[i] <- gen_count[i] + as.numeric(x3[which(as.matrix(x3[,1])==gen_ana[i]), 2])
}
if ( gen_ana[i] %in% as.matrix(x4[,1])){
gen_count[i] <- gen_count[i] + as.numeric(x4[which(as.matrix(x4[,1])==gen_ana[i]), 2])
}
if ( gen_ana[i] %in% as.matrix(x5[,1])){
gen_count[i] <- gen_count[i] + as.numeric(x5[which(as.matrix(x5[,1])==gen_ana[i]), 2])
}
}
gen_count
wordcloud(gen_ana, gen_count, scale = c(5,0.3))
wordcloud(gen_ana, gen_count, scale = c(5,0.3),min.freq=-Inf,max.words=60)
wordcloud(gen_ana, gen_count, scale = c(5,0.3),min.freq=-Inf,max.words=60, random.color = T)
wordcloud(gen_ana, gen_count, scale = c(5,0.3),min.freq=-Inf,max.words=60, random.color = T)
wordcloud(gen_ana, gen_count, scale = c(5,0.3),min.freq=-Inf,max.words=60, random.color = T)
wordcloud(gen_ana, gen_count, scale = c(5,0.3),min.freq=-Inf,max.words=60, random.color = T)
wordcloud(gen_ana, gen_count, scale = c(5,0.3),min.freq=-Inf,max.words=60, random.color = F)
colors <- c("black","red", "blue", "purple", "orange", "pink")
wordcloud(gen_ana, gen_count, scale = c(5,0.3),min.freq=-Inf,max.words=60,
colors = colors,random.color = T)
colors <- c("indianred2", "blue", "purple", "orange", "pink")
wordcloud(gen_ana, gen_count, scale = c(5,0.3),min.freq=-Inf,max.words=60,
colors = colors,order.color = T)
colors <- c("indianred2", "plum2", "springgreen2", "orange", "pink")
wordcloud(gen_ana, gen_count, scale = c(5,0.3),min.freq=-Inf,max.words=60,
colors = colors,order.color = T)
wordcloud(gen_ana, gen_count, scale = c(5,0.3),min.freq=-Inf,max.words=60,
colors = colors, random.color = T)
colors <- c("indianred4", "plum4", "springgreen2", "orange", "pink")
wordcloud(gen_ana, gen_count, scale = c(5,0.3),min.freq=-Inf,max.words=60,
colors = colors, random.color = T)
wordcloud(gen_ana, gen_count, scale = c(5,0.3),min.freq=-Inf,max.words=60,
colors = colors, random.color = T)
wordcloud(gen_ana, gen_count, scale = c(10,0.3),min.freq=-Inf,max.words=60,
colors = colors, random.color = T)
wordcloud(gen_ana, gen_count, scale = c(8,0.5),min.freq=-Inf,max.words=60,
colors = colors, random.color = T)
colors <- c("indianred4", "plum4", "springgreen2", "orange", "pink")
wordcloud(gen_ana, gen_count, scale = c(8,0.5),min.freq=-Inf,max.words=60,
colors = colors, random.color = T)
wordcloud(gen_ana, gen_count, scale = c(7,0.4),min.freq = -Inf, max.words = 100,
colors = colors, random.color = T)
wordcloud(gen_ana, gen_count, scale = c(7,0.4),min.freq = -Inf, max.words = 100,
colors = colors, random.color = F)
colors <- c("indianred4", "plum4", "springgreen2")
wordcloud(gen_ana, gen_count, scale = c(7,0.4),min.freq = -Inf, max.words = 100,
colors = colors, random.color = F)
colors <- c("indianred4", "plum4", "springgreen2", "royalblue2")
wordcloud(gen_ana, gen_count, scale = c(7,0.4),min.freq = -Inf, max.words = 100,
colors = colors, random.color = F)
wordcloud(gen_ana, gen_count, scale = c(7,0.4),min.freq = -Inf, max.words = 100,
colors = colors, random.color = T)
wordcloud(gen_ana, gen_count, scale = c(7,0.4),min.freq = -Inf, max.words = 100,
colors = colors, random.color = T)
wordcloud(gen_ana, gen_count, scale = c(7,0.4),min.freq = -Inf, max.words = 100,
colors = colors)
wordcloud(gen_ana, gen_count, scale = c(7,0.4),min.freq = -Inf, max.words = 100,
colors = colors)
wordcloud(gen_ana, gen_count, scale = c(5,0.4),min.freq = -Inf, max.words = 100,
colors = colors)
wordcloud(gen_ana, gen_count, scale = c(5,0.4),min.freq = -Inf, max.words = 100,
colors = colors)
colors <- c("red2", "plum4", "springgreen2", "royalblue2")
wordcloud(gen_ana, gen_count, scale = c(5,0.4),min.freq = -Inf, max.words = 100,
colors = colors)
colors <- c("red2", "gold2", "royalblue2")
wordcloud(gen_ana, gen_count, scale = c(5,0.4),min.freq = -Inf, max.words = 100,
colors = colors)
colors <- c("red2", "gold2", "skyblue2")
wordcloud(gen_ana, gen_count, scale = c(5,0.4),min.freq = -Inf, max.words = 100,
colors = colors)
wordcloud(gen_ana, gen_count, scale = c(4,0.5),min.freq = -Inf, max.words = 100,
colors = colors)
wordcloud(gen_ana, gen_count, scale = c(4,2), colors = colors)
wordcloud(gen_ana, gen_count, scale = c(4,1), colors = colors)
wordcloud(gen_ana, gen_count, scale = c(3, 0.5), colors = colors)
wordcloud(gen_ana, gen_count, scale = c(4, 0.5), colors = colors)
x1 <- movie_kword %>%
select(keyword1) %>%
group_by(keyword1) %>%
summarise(Freq = n())
x2 <-movie_kword %>%
select(keyword2) %>%
group_by(keyword2) %>%
summarise(Freq = n())
x3 <- movie_kword %>%
select(keyword3) %>%
group_by(keyword3) %>%
summarise(Freq = n())
x4 <- movie_kword %>%
select(keyword4) %>%
group_by(keyword4) %>%
summarise(Freq = n())
x5 <- movie_kword %>%
select(keyword5) %>%
group_by(keyword5) %>%
summarise(Freq = n())
names_key <-c(x1[,1], x2[,1], x3[,1], x4[,1], x5[,1])
kw_ana <- unique(unlist(names_key))
kw_ana[is.na(kw_ana)]
which(is.na(kw_ana))
kw_ana <- key_ana[-which(is.na(kw_ana))]
kw_ana <- kw_ana[-which(is.na(kw_ana))]
kw_count <- rep(0, length(kw_ana))
for (i in 1:length(kw_ana)){
if ( kw_ana[i] %in% as.matrix(x1[,1])){
kw_count[i] <- kw_count[i] + as.numeric(x1[which(as.matrix(x1[,1])==kw_ana[i]), 2])
}
if ( kw_ana[i] %in% as.matrix(x2[,1])){
kw_count[i] <- kw_count[i] + as.numeric(x2[which(as.matrix(x2[,1])==kw_ana[i]), 2])
}
if ( kw_ana[i] %in% as.matrix(x3[,1])){
kw_count[i] <- kw_count[i] + as.numeric(x3[which(as.matrix(x3[,1])==kw_ana[i]), 2])
}
if ( kw_ana[i] %in% as.matrix(x4[,1])){
kw_count[i] <- kw_count[i] + as.numeric(x4[which(as.matrix(x4[,1])==kw_ana[i]), 2])
}
if ( kw_ana[i] %in% as.matrix(x5[,1])){
kw_count[i] <- kw_count[i] + as.numeric(x5[which(as.matrix(x5[,1])==kw_ana[i]), 2])
}
}
kw_count
wordcloud(kw_ana, kw_count, scale = c(4, 0.5), colors = colors)
wordcloud(kw_ana, kw_count, scale = c(4, 0.5), colors = colors, max.words = 100)
wordcloud(kw_ana, kw_count, scale = c(4, 0.5), colors = colors, max.words = 60)
wordcloud(kw_ana, kw_count, scale = c(4, 0.5), colors = colors, max.words = 100)
wordcloud(kw_ana, kw_count, scale = c(4, 0.5), colors = colors, max.words = 500)
wordcloud(kw_ana, kw_count, scale = c(4, 0.3), colors = colors,
max.words = 100, random.order = F)
wordcloud(gen_ana, gen_count, scale = c(4, 0.3), colors = colors, random.order = F)
wordcloud(gen_ana, gen_count, scale = c(4, 0.3), colors = colors, random.order = F)
wordcloud(gen_ana, gen_count, scale = c(4, 0.3), colors = colors, random.order = F)
wordcloud(gen_ana, gen_count, scale = c(4, 0.6), colors = colors, random.order = F)
directors <- as.data.frame(table(dat$director_name))
names(directors)[1] <- "Name"
directors <- directors %>%
arrange(desc(Freq))
ggplot(directors[1:10, ], aes(x = reorder(factor(Name), Freq), y = Freq, alpha = Freq)) +
geom_bar(stat = "identity", fill = "dark blue") +
labs(x = "Directors", y = "Number of Movies") +
ggtitle("Top 10 directors with most movies") +
coord_flip() +
theme(text = element_text(color = "gray20"),
legend.position = c("top"),
axis.line.y = element_blank())
library(ggplot2)
ggplot(directors[1:10, ], aes(x = reorder(factor(Name), Freq), y = Freq, alpha = Freq)) +
geom_bar(stat = "identity", fill = "dark blue") +
labs(x = "Directors", y = "Number of Movies") +
ggtitle("Top 10 directors with most movies") +
coord_flip() +
theme(text = element_text(color = "gray20"),
legend.position = c("top"),
axis.line.y = element_blank())
ggplot(directors[1:10, ], aes(x = reorder(factor(Name), Freq), y = Freq, alpha = Freq)) +
geom_bar(stat = "identity", fill = "dark blue") +
labs(x = "Directors", y = "Number of Movies") +
ggtitle("Top 10 directors with most movies") +
coord_flip() +
theme_minimal()+
theme_bw()+
theme(text = element_text(color = "gray20"),
legend.position = c("top"),
axis.line.y = element_blank())
pacman::p_load(RCurl, foreign, downloader, survey, srvyr, ggplot2, dplyr)
source_url("http://raw.githubusercontent.com/ajdamico/asdfree/master/Download%20Cache/download%20cache.R", prompt=F, echo=F)
setwd("/Users/PY/GoogleDrive/Fall2016/PHP2560/Project8")
list <- list(NULL)
tf <- tempfile(); td <- tempdir()
xpt <- paste("https://kaggle2.blob.core.windows.net/datasets/138/287/imdb-5000-movie-dataset.zip?sv=2012-02-12&se=2016-11-05T18%3A43%3A21Z&sr=b&sp=r&sig=c46Bpb0oWCRXsRJ6suX%2BYBRWEbovag84sJM7B8PIqBU%3D")
download_cached(xpt, tf, mode='wb')
local.fn <- unzip(tf, exdir = td)
xpt <- paste("https://kaggle2.blob.core.windows.net/datasets/138/287/imdb-5000-movie-dataset.zip?sv=2012-02-12&se=2016-11-05T18%3A43%3A21Z&sr=b&sp=r&sig=c46Bpb0oWCRXsRJ6suX%2BYBRWEbovag84sJM7B8PIqBU%3D")
download_cached(xpt, tf, mode='wb')
xpt <- paste("https://kaggle2.blob.core.windows.net/datasets/138/287/imdb-5000-movie-dataset.zip?sv=2012-02-12&se=2016-11-19T19%3A57%3A07Z&sr=b&sp=r&sig=XWazoPea%2Fix3%2FTplL1FuYhh1YjcxhuMZFPuRJHiBy88%3D")
download_cached(xpt, tf, mode='wb')
local.fn <- unzip(tf, exdir = td)
movie_dat <- read.csv(local.fn[[1]], stringsAsFactors = FALSE, header = T)
View(movie_dat)
rm(list = all())
rm(list = all
)
rm(movie_dat)
x <- dat %>%
select(aspect_ratio, cast_total_facebook_likes,facenumber_in_poster,
num_critic_for_reviews, duration, movie_facebook_likes,
director_facebook_likes, num_voted_users, actor_1_facebook_likes,
actor_2_facebook_likes, actor_3_facebook_likes, budget, gross, imdb_score)
x <- na.omit(x)
var_name <- c("aspect_ratio", "cast_total_facebook_likes", "facenumber_in_poster",
"num_critic_for_reviews", "duration", "movie_facebook_likes",
"director_facebook_likes", "num_voted_users", "actor_1_facebook_likes",
"actor_2_facebook_likes", "actor_3_facebook_likes", "budget", "gross","imdb_score")
pval <- rep(0, (length(var_name)-1))
for (i in 1:(length(var_name)-1)){
pval[i] <- summary(lm(paste0("imdb_score~", var_name[i]), data = x))$coefficients[8]
}
pval
sig_var <- var_name[which(pval < 0.001)]  # significant variable
sum_lm <- list(rep(0, (length(var_name)-1)))
sum_lm <- rep(0, (length(var_name)-1))
for (i in 1:(length(var_name)-1)){
sum_lm[i] <- summary(lm(paste0("imdb_score~", var_name[i]), data = x))[[2]]
}
summary(lm(imdb_score~gross, data=x))
summary(lm(imdb_score~gross, data=x))[[1]]
summary(lm(imdb_score~gross, data=x))[[2]]
summary(lm(imdb_score~gross, data=x))[[3]]
summary(lm(imdb_score~gross, data=x))[[4]]
y <- as.matrix(table(dat$title_year))
x <-1:length(y)
z <- data.frame(x,y)
knitr::kable(summary(lm(log(y)~x,z))[[4]], format = "latex")
knitr::kable(summary(lm(log(y)~x,z))[[4]], format = "html")
knitr::kable(summary(lm(log(y)~x,z))[[4]])
knitr::kable(summary(lm(log(y)~x,z))[[5]])
knitr::kable(summary(lm(log(y)~x,z))[[6]])
summary(lm(log(y)~x,z))[[7]]
summary(lm(log(y)~x,z))[[6]]
summary(lm(log(y)~x,z))[[5]]
summary(lm(log(y)~x,z))[[4]]
summary(lm(log(y)~x,z))[[8]]
knitr::kable(summary(lm(log(y)~x,z)))
knitr::kable(as.data.frame(summary(lm(log(y)~x,z))))
as.data.frame(summary(lm(log(y)~x,z)))
sum_lm <- list(0, length = (length(var_name)-1))
length(var_name)-1
sum_lm <- vector(list(0), length = (length(var_name)-1))
sum_lm <- vector(list(), length = (length(var_name)-1))
sum_lm <- list(rep(0,13))
vector(0,length = 13)
vector(1,length = 13)
vector(list(),length = 13)
vector(list(3),length = 13)
sum_lm <- list(0,0,0,0,0,0,0,0,0,0)
x <- dat %>%
select(aspect_ratio, cast_total_facebook_likes,facenumber_in_poster,
num_critic_for_reviews, duration, movie_facebook_likes,
director_facebook_likes, num_voted_users, actor_1_facebook_likes,
actor_2_facebook_likes, actor_3_facebook_likes, budget, gross, imdb_score)
x <- na.omit(x)
View(dat)
sum_lm <- list(0,0,0,0,0,0,0,0,0,0,0,0,0)
for (i in 1:(length(var_name)-1)){
sum_lm[[i]] <- summary(lm(paste0("imdb_score~", var_name[i]), data = x))[[4]]
}
sum_lm
knitr::kable(sum_lm[[1]])
sum_lm[[1]]
knitr::kable(sum_lm[[1]], format = "markdown")
knitr::kable(summary(lm(paste0("imdb_score~", var_name[1]), data = x))[[4]], format = "markdown")
knitr::kable(as.matrix(sum_lm[[1]]), format = "markdown")
summary(lm(paste0("imdb_score~", var_name[i]), data = x))
summary(lm(paste0("imdb_score~", var_name[i]), data = x))$Coefficients
summary(lm(paste0("imdb_score~", var_name[i]), data = x))$coefficients
sum_lm <- list(0,0,0,0,0,0,0,0,0,0,0,0,0)
for (i in 1:(length(var_name)-1)){
sum_lm[[i]] <- summary(lm(paste0("imdb_score~", var_name[i]), data = x))$coefficients
}
knitr::kable(as.matrix(sum_lm[[1]]), format = "markdown")
knitr::kable(as.matrix(sum_lm[[1]]))
as.data.frame(sum_lm[[1]])
knitr::kable(as.data.frame(sum_lm[[1]]))
length(sum_lm)
load("MOVIE.rda")
